name: Build Test and Publish

# Controls when the action will run. Triggers the workflow on push or pull request
on:
  push:
    branches:
      - develop
      - release/**
      - hotfix/**
  pull_request:
    branches:
      - develop
      - master
  release:
    types:
      - created

env:
  Configuration: Release 
  SlnPath: ./src/Svea.WebPay.SDK.sln
  CsprojPath: ./src/Svea.WebPay.SDK/Svea.WebPay.SDK.csproj
  dotnetVersion: |
    3.1.101
    5.x
    6.x
  AZURE_WEBAPP_PACKAGE_PATH: '.'


jobs:

  variables:
    name: Create version number
    runs-on: ubuntu-latest
    outputs:
      ENVIRONMENT: ${{ steps.setoutputvariables.outputs.ENVIRONMENT }}
      AZURE_WEBAPP_NAME: ${{ steps.setoutputvariables.outputs.AZURE_WEBAPP_NAME }}
      PUBLISH_PROFILE: ${{ steps.setoutputvariables.outputs.PUBLISH_PROFILE }}
      NUGETVERSIONV2: ${{ steps.setoutputvariables.outputs.NUGETVERSIONV2 }}
  
       
    steps:
      - uses: actions/checkout@v3

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.13
        with:
          versionSpec: '5.x.x'
 
      - name: Fetch all history for all tags and branches
        run: git fetch --prune --unshallow
 
      - name: Use GitVersion
        id: gitversion # step id used as reference for output values
        uses: gittools/actions/gitversion/execute@v0.9.13

      - name: Set dev environment variables
        uses: allenevans/set-env@v2.2.0
        if: ${{ startsWith(github.ref, 'refs/heads/develop') }} || ${{ github.event_name == 'pull_request' }}
        with: 
          ENVIRONMENT: dev
          AZURE_WEBAPP_NAME: svea-webpay-sdk-001-dev
          NUGETVERSIONV2: ${{ steps.gitversion.outputs.nuGetVersionV2 }}

      - name: Set uat environment variables
        uses: allenevans/set-env@v2.2.0
        if: ${{ startsWith(github.ref, 'refs/heads/release/') || startsWith(github.ref, 'refs/heads/hotfix/') || contains(github.ref, '-beta')}} 
        with: 
          ENVIRONMENT: uat
          AZURE_WEBAPP_NAME: svea-webpay-sdk-001-uat
          NUGETVERSIONV2: ${{ steps.gitversion.outputs.nuGetVersionV2 }}

      - name: Set pro environment variables
        uses: allenevans/set-env@v2.2.0
        if: ${{ startsWith(github.ref, 'refs/tags/') && !contains(github.ref, 'refs/tags/*-*') }} 
        with: 
          ENVIRONMENT: pro
          AZURE_WEBAPP_NAME: svea-webpay-sdk-001-pro
          NUGETVERSIONV2: ${{ steps.gitversion.outputs.nuGetVersionV2 }}

      - id: setoutputvariables
        name: Set output variables
        run: |
            echo "::set-output name=ENVIRONMENT::${ENVIRONMENT}"
            echo "::set-output name=AZURE_WEBAPP_NAME::${AZURE_WEBAPP_NAME}"
            echo "::set-output name=NUGETVERSIONV2::${NUGETVERSIONV2}"

  
  build:
    name: Build SDK ${{needs.variables.outputs.NUGETVERSIONV2}} ${{ matrix.os }}
    needs: [variables]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    
    steps:
      
      - uses: actions/checkout@v3
      
      - name: Setup .NET
        uses: actions/setup-dotnet@v3.0.1
        with:
          dotnet-version: ${{ env.dotnetVersion }}
 
      - name: Install dependencies
        run: dotnet restore ${{ env.SlnPath }}
 
      - name: Build Solution
        run: dotnet build ${{ env.SlnPath }} -p:Version=${{ needs.variables.outputs.NUGETVERSIONV2 }}  --configuration ${{ env.Configuration }} --no-restore
  
  publish_test_nuget:
    if: ${{ github.event_name != 'pull_request' && needs.variables.outputs.ENVIRONMENT == 'dev'}}
    name: Build and publish alpha nuget
    needs: [variables, build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup .NET
        uses: actions/setup-dotnet@v3.0.1
        with:
          dotnet-version: ${{ env.dotnetVersion }}
          source-url: https://nuget.pkg.github.com/sveawebpay/index.json
        env:
          NUGET_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}
      
      - name: Install dependencies
        run: dotnet restore ${{ env.SlnPath }}

      - name: Build Solution
        run: dotnet build ${{ env.SlnPath }} -p:Version=${{ needs.variables.outputs.NUGETVERSIONV2 }}  --configuration ${{ env.Configuration }} --no-restore
      
      - name: Nuget pack
        run: dotnet pack ${{ env.CsprojPath }} -p:PackageVersion=${{ needs.variables.outputs.NUGETVERSIONV2 }} -p:Version=${{ needs.variables.outputs.NUGETVERSIONV2 }} --configuration=${{ env.Configuration }} --output=artifacts

      - name: Publish test package to GitHub Package Registry
        run: dotnet nuget push "artifacts/*.nupkg" --api-key ${{secrets.GITHUB_TOKEN}} --source  https://nuget.pkg.github.com/sveawebpay/index.json --skip-duplicate

  test:
    name: Run Unit and UI tests
    needs: [variables, build]
    runs-on: ubuntu-20.04
    
    steps:
      - uses: actions/checkout@v3
       
      - name: Variable Substitution
        uses: microsoft/variable-substitution@v1
        with:
         # comma separated list of XML/JSON/YAML files in which tokens are to be substituted. Files names must be specified relative to the folder-path.
           files: 'src/Samples/Sample.AspNetCore/appsettings.json, src/Samples/Sample.AspNetCore/ngrok.yml, src/Samples/Sample.AspNetCore.SystemTests/appsettings.json'
        env:
          authtoken: ${{ secrets.NGROK_AUTHTOKEN }}
          Credentials.0.MerchantId: ${{ secrets.SWEDEN_MERCHANT_ID }}
          Credentials.0.Secret: ${{ secrets.SWEDEN_MERCHANT_SECRET }}
          Credentials.1.MerchantId: ${{ secrets.NORWAY_MERCHANT_ID }}
          Credentials.1.Secret: ${{ secrets.NORWAY_MERCHANT_SECRET }}
          Credentials.2.MerchantId: ${{ secrets.FINNISH_MERCHANT_ID }}
          Credentials.2.Secret: ${{ secrets.FINNISH_MERCHANT_SECRET }}
          MerchantSettings.PushUri: https://svea-webpay-sdk-001-${{ needs.variables.outputs.ENVIRONMENT }}.azurewebsites.net/api/svea/push/{checkout.order.uri}/?marketId={marketId}
          MerchantSettings.TermsUri: https://svea-webpay-sdk-001-${{ needs.variables.outputs.ENVIRONMENT }}.azurewebsites.net/terms
          MerchantSettings.CheckoutUri: https://svea-webpay-sdk-001-${{ needs.variables.outputs.ENVIRONMENT }}.azurewebsites.net/CheckOut/LoadPaymentMenu
          MerchantSettings.ConfirmationUri: https://svea-webpay-sdk-001-${{ needs.variables.outputs.ENVIRONMENT }}.azurewebsites.net/checkout/thankyou
          MerchantSettings.CheckoutValidationCallbackUri: https://svea-webpay-sdk-001-${{ needs.variables.outputs.ENVIRONMENT }}.azurewebsites.net/api/svea/validation/{checkout.order.uri}/?marketId={marketId}

      - name: Setup .NET
        uses: actions/setup-dotnet@v3.0.1
        with:
          dotnet-version: ${{ env.dotnetVersion }}       

      - name: Install dependencies
        run: dotnet restore ${{ env.SlnPath }}

      - name: Run Unit Tests
        run: dotnet test --configuration ${{ env.Configuration }} src/Svea.WebPay.SDK.Tests/Svea.WebPay.SDK.Tests.csproj
        env:
          Credentials:0:MerchantId: ${{ secrets.SWEDEN_MERCHANT_ID}}
          Credentials:0:Secret: ${{ secrets.SWEDEN_MERCHANT_SECRET }}
          Credentials:1:MerchantId: ${{ secrets.NORWAY_MERCHANT_ID}}
          Credentials:1:Secret: ${{ secrets.NORWAY_MERCHANT_SECRET }}
          Credentials:2:MerchantId: ${{ secrets.FINNISH_MERCHANT_ID }}
          Credentials:2:Secret: ${{ secrets.FINNISH_MERCHANT_SECRET }}
          
      - name: Publish Sdk Sample site
        run: dotnet publish --configuration ${{ env.Configuration }} -p:Version=${{ needs.variables.outputs.nuGetVersionV2 }} --no-restore src/Samples/Sample.AspNetCore/Sample.AspNetCore.csproj --output '${{ env.AZURE_WEBAPP_PACKAGE_PATH }}/samplesite'
            
      - name: Setup ngrok
        if: ${{ github.event_name != 'pull_request' }}
        run: |
          wget https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-linux-amd64.zip
          jar xvf ngrok-stable-linux-amd64.zip
          chmod +x ngrok
          
      - name: Start ngrok
        if: ${{ github.event_name != 'pull_request' }}
        run: ./ngrok start -config ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}/samplesite/ngrok.yml uitest${{ needs.variables.outputs.ENVIRONMENT }} &
                   
      - name: Start SDK Sample project
        if: ${{ github.event_name != 'pull_request' }}
        working-directory: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}/samplesite
        run:
            dotnet Sample.AspNetCore.dll &
        env:
          Credentials:0:MerchantId: ${{ secrets.SWEDEN_MERCHANT_ID}}
          Credentials:0:Secret: ${{ secrets.SWEDEN_MERCHANT_SECRET }}
          Credentials:1:MerchantId: ${{ secrets.NORWAY_MERCHANT_ID}}
          Credentials:1:Secret: ${{ secrets.NORWAY_MERCHANT_SECRET }}
          Credentials:2:MerchantId: ${{ secrets.FINNISH_MERCHANT_ID }}
          Credentials:2:Secret: ${{ secrets.FINNISH_MERCHANT_SECRET }}
          MerchantSettings:PushUri: https://uitest-${{ needs.variables.outputs.ENVIRONMENT }}-svea-webpay-sdk.eu.ngrok.io/api/svea/push/{checkout.order.uri}/?marketId={marketId}
          MerchantSettings:TermsUri: https://uitest-${{ needs.variables.outputs.ENVIRONMENT }}-svea-webpay-sdk.eu.ngrok.io/terms
          MerchantSettings:CheckoutUri: https://uitest-${{ needs.variables.outputs.ENVIRONMENT }}-svea-webpay-sdk.eu.ngrok.io/CheckOut/LoadPaymentMenu
          MerchantSettings:ConfirmationUri: https://uitest-${{ needs.variables.outputs.ENVIRONMENT }}-svea-webpay-sdk.eu.ngrok.io/checkout/thankyou
          MerchantSettings:CheckoutValidationCallbackUri: https://uitest-${{ needs.variables.outputs.ENVIRONMENT }}-svea-webpay-sdk.eu.ngrok.io/api/svea/validation/{checkout.order.uri}/?marketId={marketId}
      

      - name: Verify chrome driver
        shell: pwsh
        run: |
          ./src/Samples/Sample.AspNetCore.SystemTests/chrome-driver-udpate.ps1

      - name: Run SDK UI tests
        if: ${{ github.event_name != 'pull_request' && needs.variables.outputs.ENVIRONMENT != 'dev'}}
        run: dotnet test --configuration ${{ env.Configuration }} src/Samples/Sample.AspNetCore.SystemTests/Sample.AspNetCore.SystemTests.csproj
        env:
          Credentials:0:MerchantId: ${{ secrets.SWEDEN_MERCHANT_ID}}
          Credentials:0:Secret: ${{ secrets.SWEDEN_MERCHANT_SECRET }}
          Credentials:1:MerchantId: ${{ secrets.NORWAY_MERCHANT_ID}}
          Credentials:1:Secret: ${{ secrets.NORWAY_MERCHANT_SECRET }}
          Credentials:2:MerchantId: ${{ secrets.FINNISH_MERCHANT_ID }}
          Credentials:2:Secret: ${{ secrets.FINNISH_MERCHANT_SECRET }}
          SampleWebsite:Url: https://localhost:5001


      - name: Archive Sample.AspNetCore
        uses: actions/upload-artifact@v3
        with:
          name: Sample.AspNetCore
          path: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}/samplesite

      - name: Nuget pack
        run: dotnet pack ${{ env.CsprojPath }} -p:PackageVersion=${{ needs.variables.outputs.NUGETVERSIONV2 }} -p:Version=${{ needs.variables.outputs.NUGETVERSIONV2 }} --configuration=${{ env.Configuration }} --output=artifacts

      - name: Archive nuget packages artifacts
        uses: actions/upload-artifact@v3
        with:
          # Artifact name
          name: packages
          # A file, directory or wildcard pattern that describes what to upload
          path: artifacts/*.nupkg
                
      - name: Publish to nuget
        if: ${{ github.event_name == 'release' }}
        run: dotnet nuget push artifacts/*.nupkg --source https://api.nuget.org/v3/index.json --api-key ${{ secrets.NUGET_API_KEY }} --skip-duplicate      
         
  publish:
    if: ${{ github.event_name != 'pull_request' }}
    name: Publish
    needs: [variables, build, test]
    runs-on: ubuntu-20.04
    steps:
      - name: Download All artifacts
        uses: actions/download-artifact@v3   
    
      # Deploy to Dev Azure Web apps
      - name: 'Run Azure webapp deploy to dev using publish profile credentials'
        if: ${{ needs.variables.outputs.ENVIRONMENT == 'dev'}}
        uses: azure/webapps-deploy@v2
        with: 
          app-name: ${{ needs.variables.outputs.AZURE_WEBAPP_NAME }} # Replace with your app name
          publish-profile: ${{ secrets.AZURE_WEBAPP_DEV_PUBLISH_PROFILE }} # Define secret variable in repository settings as per action documentation
          package: 'Sample.AspNetCore'


      # Deploy to Uat Azure Web apps
      - name: 'Run Azure webapp deploy to uat using publish profile credentials'
        if: ${{ needs.variables.outputs.ENVIRONMENT == 'uat'}}
        uses: azure/webapps-deploy@v2
        with: 
          app-name: ${{ needs.variables.outputs.AZURE_WEBAPP_NAME }} # Replace with your app name
          publish-profile: ${{ secrets.AZURE_WEBAPP_UAT_PUBLISH_PROFILE }} # Define secret variable in repository settings as per action documentation
          package: 'Sample.AspNetCore'

      # Deploy to Pro Azure Web apps
      - name: 'Run Azure webapp deploy to pro using publish profile credentials'
        if: ${{ needs.variables.outputs.ENVIRONMENT == 'pro'}}
        uses: azure/webapps-deploy@v2
        with: 
          app-name: ${{ needs.variables.outputs.AZURE_WEBAPP_NAME }} # Replace with your app name
          publish-profile: ${{ secrets.AZURE_WEBAPP_PRO_PUBLISH_PROFILE }} # Define secret variable in repository settings as per action documentation
          package: 'Sample.AspNetCore'
