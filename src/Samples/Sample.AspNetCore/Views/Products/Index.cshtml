@using System.Globalization
@model IEnumerable<Product>
@inject Cart CartService
@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@if (TempData["AbortMessage"] != null)
{
    <div class="alert alert-success">@TempData["AbortMessage"]</div>
}
else if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-warning">@TempData["ErrorMessage"]</div>
}
<h1>Store</h1>



<p>
    <a asp-action="Create">Create New Product</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Reference)
            </th>

            <th>
                @Html.DisplayNameFor(model => model.Type)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Class)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Price)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DiscountAmount)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DiscountPercent)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.VatPercentage)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>@Html.DisplayFor(modelItem => item.Name)</td>
                <td>@Html.DisplayFor(modelItem => item.Reference)</td>
                <td>@Html.DisplayFor(modelItem => item.Type)</td>
                <td>@Html.DisplayFor(modelItem => item.Class)</td>
                <td>@((item.Price).ToString("c", CultureInfo.CreateSpecificCulture("sv-SE")))</td>
                <td>@(item.DiscountAmount != 0 ? item.DiscountAmount.ToString("c", CultureInfo.CreateSpecificCulture("sv-SE")) : null)</td>
                <td>@(item.DiscountPercent != 0 ? item.DiscountPercent.ToString() + "%" : null)</td>
                <td>@(item.VatPercentage != 0 ? item.VatPercentage.ToString() + "%" : null)</td>

                <td><a class="btn btn-primary" automation="button-addtocart" asp-action="AddToCart" asp-controller="Cart" asp-route-id="@item.ProductId">Add to Cart</a></td>
            </tr>
        }
    </tbody>
</table>
@if (CartService.CartLines.Any())
{
    @await Component.InvokeAsync("CartSummary")
}